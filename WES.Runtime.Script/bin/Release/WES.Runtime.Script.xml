<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WES.Runtime.Script</name>
    </assembly>
    <members>
        <member name="T:Zeghs.Managers.ScriptManager">
            <summary>
              腳本管理員類別
            </summary>
        </member>
        <member name="M:Zeghs.Managers.ScriptManager.LoadSettings">
            <summary>
              讀取腳本設定值
            </summary>
        </member>
        <member name="M:Zeghs.Managers.ScriptManager.SaveSettings">
            <summary>
              儲存腳本設定值
            </summary>
        </member>
        <member name="M:Zeghs.Managers.ScriptManager.ComplierAndUpdate(System.String)">
            <summary>
              編譯後更新腳本
            </summary>
            <param name="scriptFile">腳本檔案名稱</param>
            <returns>返回值:true=成功, false=失敗</returns>
        </member>
        <member name="M:Zeghs.Managers.ScriptManager.CreateScript(System.String)">
            <summary>
              建立新的腳本執行個體
            </summary>
            <param name="scriptName">完整腳本名稱</param>
            <returns>返回值: CStudyAbstract 類別, null=無此腳本</returns>
        </member>
        <member name="M:Zeghs.Managers.ScriptManager.LoadScripts">
            <summary>
              讀取所有腳本
            </summary>
        </member>
        <member name="M:Zeghs.Managers.ScriptManager.AddScript(System.String)">
            <summary>
              加入腳本
            </summary>
            <param name="assemblyFile">編譯後的腳本檔案名稱</param>
        </member>
        <member name="M:Zeghs.Managers.ScriptManager.AddScript(System.Reflection.Assembly)">
            <summary>
              加入腳本
            </summary>
            <param name="assembly">Assembly 組件資訊</param>
        </member>
        <member name="M:Zeghs.Managers.ScriptManager.Complier(System.String)">
            <summary>
              編譯腳本
            </summary>
            <param name="scriptFile">腳本檔案名稱</param>
            <returns>返回值:編譯後的腳本檔案名稱, null=編譯失敗</returns>
        </member>
        <member name="P:Zeghs.Managers.ScriptManager.Settings">
            <summary>
              [取得] 腳本設定資訊
            </summary>
        </member>
        <member name="P:Zeghs.Managers.ScriptManager.Manager">
            <summary>
              [取得] ScriptManager類別
            </summary>
        </member>
        <member name="E:Zeghs.Managers.ScriptManager.onAdditionScript">
            <summary>
              當讀取或新增腳本時會觸發此事件
            </summary>
        </member>
        <member name="E:Zeghs.Managers.ScriptManager.onLoadScriptCompleted">
            <summary>
              讀取所有腳本完成後會觸發此事件
            </summary>
        </member>
        <member name="P:Zeghs.Managers.ScriptManager.Scripts">
            <summary>
              [取得] 所有腳本資訊
            </summary>
        </member>
        <member name="T:PowerLanguage.CStudyAbstract">
            <summary>
              基礎腳本抽象類別
            </summary>
        </member>
        <member name="T:PowerLanguage.CStudyControl">
            <summary>
              基礎腳本控制類別(如果只有應用在圖表顯示則可以使用此類別)
            </summary>
        </member>
        <member name="M:PowerLanguage.CStudyControl.#ctor">
            <summary>
              建構子
            </summary>
        </member>
        <member name="M:PowerLanguage.CStudyControl.AddDataStream(PowerLanguage.IInstrument)">
            <summary>
              加入資料串流
            </summary>
            <param name="instrument">IInstrument 商品資訊介面</param>
            <returns>回傳值: 資料串流編號</returns>
        </member>
        <member name="M:PowerLanguage.CStudyControl.AddDataStreams(System.Collections.Generic.List{PowerLanguage.InstrumentDataRequest})">
            <summary>
              加入資料串流
            </summary>
            <param name="dataRequests">InstrumentDataRequest 列表</param>
        </member>
        <member name="M:PowerLanguage.CStudyControl.ConnectQuoteServer">
            <summary>
              連結即時報價資訊源
            </summary>
        </member>
        <member name="M:PowerLanguage.CStudyControl.Dispose">
            <summary>
              釋放腳本資源
            </summary>
        </member>
        <member name="M:PowerLanguage.CStudyControl.RemoveDataStream(System.Int32)">
            <summary>
              移除資料串流
            </summary>
            <param name="data_stream">資料串流編號(1 為主要依據不能移除)</param>
        </member>
        <member name="M:PowerLanguage.CStudyControl.Dispose(System.Boolean)">
            <summary>
              釋放腳本資源
            </summary>
            <param name="disposing">是否正在處理資源中</param>
        </member>
        <member name="M:PowerLanguage.CStudyControl.OnUpdate">
            <summary>
              當有資料時會觸發這個更新的事件
            </summary>
        </member>
        <member name="M:PowerLanguage.CStudyControl.Start">
            <summary>
              啟動腳本
            </summary>
        </member>
        <member name="M:PowerLanguage.CStudyControl.OnQuoteDateTime(Zeghs.Events.QuoteDateTimeEvent)">
            <summary>
              由伺服器報價時間觸發的引動事件
            </summary>
            <param name="e">伺服器報價時間資訊</param>
        </member>
        <member name="E:PowerLanguage.CStudyControl.onDisconnected">
            <summary>
              當即時報價資訊斷線時所觸發的事件
            </summary>
        </member>
        <member name="E:PowerLanguage.CStudyControl.onQuoteDateTime">
            <summary>
              當伺服器對時資訊送來所觸發的事件
            </summary>
        </member>
        <member name="E:PowerLanguage.CStudyControl.onReady">
            <summary>
              當所有報價資訊都準備好時所觸發的事件
            </summary>
        </member>
        <member name="E:PowerLanguage.CStudyControl.onUpdate">
            <summary>
              當有資料時會觸發這個更新的事件
            </summary>
        </member>
        <member name="P:PowerLanguage.CStudyControl.Bars">
            <summary>
              [取得] IInstrument 資訊
            </summary>
        </member>
        <member name="P:PowerLanguage.CStudyControl.MaxDataStream">
            <summary>
              [取得] 最大 IInstrument 資訊個數
            </summary>
        </member>
        <member name="P:PowerLanguage.CStudyControl.DataLoader">
            <summary>
              [取得] 商品資訊資料讀取者
            </summary>
        </member>
        <member name="M:PowerLanguage.CStudyAbstract.#ctor">
            <summary>
              建構子
            </summary>
        </member>
        <member name="M:PowerLanguage.CStudyAbstract.AddFunction(PowerLanguage.IStudyControl)">
            <summary>
              加入 FunctionObject 類別方法
            </summary>
            <param name="func">IStudyControl 介面</param>
        </member>
        <member name="M:PowerLanguage.CStudyAbstract.AddVariable(PowerLanguage.IVariables)">
            <summary>
              加入變數類別方法
            </summary>
            <param name="var">變數擴充介面</param>
        </member>
        <member name="M:PowerLanguage.CStudyAbstract.BarsOfData(System.Int32)">
            <summary>
              取得其他的 Bars 資訊
            </summary>
            <param name="data_stream">資料串流編號(1 為起始編號)</param>
            <returns>返回值: IInstrument 介面</returns>
        </member>
        <member name="M:PowerLanguage.CStudyAbstract.CalcBar">
            <summary>
              計算 Bars 時所呼叫的方法
            </summary>
        </member>
        <member name="M:PowerLanguage.CStudyAbstract.Create">
            <summary>
              建立模型時所呼叫的方法
            </summary>
        </member>
        <member name="M:PowerLanguage.CStudyAbstract.Destroy">
            <summary>
              模型釋放時所呼叫的方法
            </summary>
        </member>
        <member name="M:PowerLanguage.CStudyAbstract.StartCalc">
            <summary>
              開始計算 Bars 時所呼叫的方法
            </summary>
        </member>
        <member name="M:PowerLanguage.CStudyAbstract.StopCalc">
            <summary>
              停止計算 Bars 時所呼叫的方法
            </summary>
        </member>
        <member name="M:PowerLanguage.CStudyAbstract.CStudyDestroy">
            <summary>
              腳本內部資源釋放行為
            </summary>
        </member>
        <member name="M:PowerLanguage.CStudyAbstract.CStudyInitialize">
            <summary>
              腳本內部初始化行為
            </summary>
        </member>
        <member name="M:PowerLanguage.CStudyAbstract.Dispose(System.Boolean)">
            <summary>
              釋放腳本資源
            </summary>
            <param name="disposing">是否正在處理資源中</param>
        </member>
        <member name="M:PowerLanguage.CStudyAbstract.OnCalculate">
            <summary>
              計算使用者設計的邏輯方法 CalcBar
            </summary>
        </member>
        <member name="M:PowerLanguage.CStudyAbstract.Start">
            <summary>
              啟動腳本
            </summary>
        </member>
        <member name="E:PowerLanguage.CStudyAbstract.onScriptParameters">
            <summary>
              腳本初始化所觸發的事件
            </summary>
        </member>
        <member name="P:PowerLanguage.CStudyAbstract.About">
            <summary>
              [取得] 腳本開發者資訊
            </summary>
        </member>
        <member name="P:PowerLanguage.CStudyAbstract.DrwText">
            <summary>
              [取得] 文字繪製容器
            </summary>
        </member>
        <member name="P:PowerLanguage.CStudyAbstract.log">
            <summary>
              [取得] log 日誌紀錄員
            </summary>
        </member>
        <member name="P:PowerLanguage.CStudyAbstract.Output">
            <summary>
              [取得] 輸出訊息介面
            </summary>
        </member>
        <member name="T:Zeghs.Scripts.ScriptType">
            <summary>
              腳本類型
            </summary>
        </member>
        <member name="F:Zeghs.Scripts.ScriptType.Signal">
            <summary>
              交易信號
            </summary>
        </member>
        <member name="F:Zeghs.Scripts.ScriptType.Script">
            <summary>
              自訂腳本  
            </summary>
        </member>
        <member name="T:Zeghs.Scripts.ScriptSettings">
            <summary>
              腳本設定類別
            </summary>
        </member>
        <member name="P:Zeghs.Scripts.ScriptSettings.OutputPath">
            <summary>
              [取得/設定] 編譯後的輸出路徑
            </summary>
        </member>
        <member name="P:Zeghs.Scripts.ScriptSettings.SourcePath">
            <summary>
              [取得/設定] 腳本來源路徑
            </summary>
        </member>
        <member name="T:PowerLanguage.FunctionObject`1">
            <summary>
              內建指標方法抽象類別
            </summary>
            <typeparam name="T">泛型型別</typeparam>
        </member>
        <member name="M:PowerLanguage.FunctionObject`1.#ctor(PowerLanguage.CStudyAbstract,System.Int32,System.Boolean)">
            <summary>
              建構子
            </summary>
            <param name="master">CStudyAbstract 類別</param>
            <param name="dataStream">資料串流編號</param>
            <param name="manageFromStudy">由 CStudyAbstract 自動管理與釋放資源(預設:true)</param>
        </member>
        <member name="M:PowerLanguage.FunctionObject`1.AddVariable(PowerLanguage.IVariables)">
            <summary>
              加入變數類別方法
            </summary>
            <param name="var">變數擴充介面</param>
        </member>
        <member name="M:PowerLanguage.FunctionObject`1.BarsOfData(System.Int32)">
            <summary>
              取得其他的 Bars 資訊
            </summary>
            <param name="data_stream">資料串流編號(1 為起始編號)</param>
            <returns>返回值: IInstrument 介面</returns>
        </member>
        <member name="M:PowerLanguage.FunctionObject`1.Dispose">
            <summary>
              釋放腳本資源
            </summary>
        </member>
        <member name="M:PowerLanguage.FunctionObject`1.CalcBar">
            <summary>
              計算 Bars 時所呼叫的方法
            </summary>
        </member>
        <member name="M:PowerLanguage.FunctionObject`1.Create">
            <summary>
              建立模型時所呼叫的方法
            </summary>
        </member>
        <member name="M:PowerLanguage.FunctionObject`1.Destroy">
            <summary>
              模型釋放時所呼叫的方法
            </summary>
        </member>
        <member name="M:PowerLanguage.FunctionObject`1.StartCalc">
            <summary>
              開始計算 Bars 時所呼叫的方法
            </summary>
        </member>
        <member name="M:PowerLanguage.FunctionObject`1.StopCalc">
            <summary>
              停止計算 Bars 時所呼叫的方法
            </summary>
        </member>
        <member name="M:PowerLanguage.FunctionObject`1.Dispose(System.Boolean)">
            <summary>
              釋放腳本資源
            </summary>
            <param name="disposing">是否正在處理資源中</param>
        </member>
        <member name="P:PowerLanguage.FunctionObject`1.Value">
            <summary>
              [取得] 目前資料
            </summary>
        </member>
        <member name="P:PowerLanguage.FunctionObject`1.Item(System.Int32)">
            <summary>
              [取得] 目前或是之前的資料
            </summary>
            <param name="barsAgo">目前或是之前的索引(0=目前的 Bar)</param>
            <returns>返回值:從索引值獲得的所需資料</returns>
        </member>
        <member name="P:PowerLanguage.FunctionObject`1.Bars">
            <summary>
              [取得] IInstrument 資訊
            </summary>
        </member>
        <member name="P:PowerLanguage.FunctionObject`1.MasterDataStream">
            <summary>
              [取得/設定] 主要資料串流編號
            </summary>
        </member>
        <member name="T:Zeghs.Events.AddationScriptEvent">
            <summary>
              新增腳本事件類別
            </summary>
        </member>
        <member name="P:Zeghs.Events.AddationScriptEvent.Assembly">
            <summary>
              [取得] 腳本組件
            </summary>
        </member>
        <member name="P:Zeghs.Events.AddationScriptEvent.ScriptInformation">
            <summary>
              [取得] 腳本資訊類別
            </summary>
        </member>
        <member name="T:Zeghs.Scripts.ScriptPropertyAttribute">
            <summary>
              腳本屬性類別
            </summary>
        </member>
        <member name="P:Zeghs.Scripts.ScriptPropertyAttribute.Company">
            <summary>
              [取得/設定] 公司名稱
            </summary>
        </member>
        <member name="P:Zeghs.Scripts.ScriptPropertyAttribute.Comment">
            <summary>
              [取得/設定] 腳本說明
            </summary>
        </member>
        <member name="P:Zeghs.Scripts.ScriptPropertyAttribute.Copyright">
            <summary>
              [取得/設定] 商標名稱
            </summary>
        </member>
        <member name="P:Zeghs.Scripts.ScriptPropertyAttribute.ScriptType">
            <summary>
              [取得/設定] 腳本類型
            </summary>
        </member>
        <member name="P:Zeghs.Scripts.ScriptPropertyAttribute.Version">
            <summary>
              [取得/設定] 版本編號
            </summary>
        </member>
        <member name="T:Zeghs.Informations.ScriptInformation">
            <summary>
              腳本資訊類別
            </summary>
        </member>
        <member name="M:Zeghs.Informations.ScriptInformation.#ctor(System.Type,Zeghs.Scripts.ScriptPropertyAttribute)">
            <summary>
              建構子
            </summary>
            <param name="script">腳本Type型別</param>
            <param name="property">腳本屬性</param>
        </member>
        <member name="M:Zeghs.Informations.ScriptInformation.CreateScript">
            <summary>
              建立腳本
            </summary>
            <returns>返回值:AbstractScript類別</returns>
        </member>
        <member name="P:Zeghs.Informations.ScriptInformation.FullName">
            <summary>
              [取得] 腳本完整名稱
            </summary>
        </member>
        <member name="P:Zeghs.Informations.ScriptInformation.Name">
            <summary>
              [取得] 腳本名稱
            </summary>
        </member>
        <member name="P:Zeghs.Informations.ScriptInformation.Property">
            <summary>
              [取得] 腳本屬性值
            </summary>
        </member>
        <member name="T:Zeghs.Scripts.SignalProperty">
            <summary>
              信號設定屬性類別
            </summary>
        </member>
        <member name="P:Zeghs.Scripts.SignalProperty.DefaultContracts">
            <summary>
              [取得/設定] 預設的合約數量
            </summary>
        </member>
        <member name="P:Zeghs.Scripts.SignalProperty.InitialCapital">
            <summary>
              [取得/設定] 初始本金
            </summary>
        </member>
        <member name="P:Zeghs.Scripts.SignalProperty.MaximumBarsReference">
            <summary>
              [取得/設定] 信號使用的最大 Bars count 參考值
            </summary>
        </member>
        <member name="P:Zeghs.Scripts.SignalProperty.OrderSource">
            <summary>
              [取得/設定] 下單來源名稱
            </summary>
        </member>
        <member name="T:Zeghs.Events.OutputDataEvent">
            <summary>
              輸出資料事件
            </summary>
        </member>
        <member name="M:Zeghs.Events.OutputDataEvent.#ctor(System.String,System.Boolean)">
            <summary>
              建構子
            </summary>
            <param name="output">輸出字串</param>
            <param name="isNewLine">是否需要添加換行字元</param>
        </member>
        <member name="P:Zeghs.Events.OutputDataEvent.Data">
            <summary>
              [取得] 輸出字串資料
            </summary>
        </member>
        <member name="P:Zeghs.Events.OutputDataEvent.IsNewLine">
            <summary>
              [取得] 是否需要添加換行字元
            </summary>
        </member>
        <member name="T:Zeghs.Events.ScriptParametersEvent">
            <summary>
              腳本初始化事件類別
            </summary>
        </member>
        <member name="M:Zeghs.Events.ScriptParametersEvent.SetOrderService(Zeghs.Services.AbstractOrderService)">
            <summary>
              設定下單服務元件(需要設定佣金參數, 所以必須傳出)
            </summary>
            <param name="service">下單服務元件</param>
        </member>
        <member name="M:Zeghs.Events.ScriptParametersEvent.SetScriptParameters(System.Collections.Generic.List{PowerLanguage.InputAttribute})">
            <summary>
              設定腳本參數列表
            </summary>
            <param name="args">腳本參數列表</param>
        </member>
        <member name="P:Zeghs.Events.ScriptParametersEvent.OrderService">
            <summary>
              [取得] 下單服務元件(設定佣金參數)
            </summary>
        </member>
        <member name="P:Zeghs.Events.ScriptParametersEvent.ScriptParameters">
            <summary>
              [取得] 腳本參數列表
            </summary>
        </member>
        <member name="T:PowerLanguage.SignalObject">
            <summary>
              交易信號物件抽象類別
            </summary>
        </member>
        <member name="M:PowerLanguage.SignalObject.#ctor(System.Object)">
            <summary>
              建構子
            </summary>
            <param name="_ctx">相容 Multicharts 系統</param>
        </member>
        <member name="M:PowerLanguage.SignalObject.ApplyProperty(Zeghs.Scripts.SignalProperty)">
            <summary>
              施行信號屬性設定值
            </summary>
            <param name="property">信號屬性類別</param>
        </member>
        <member name="M:PowerLanguage.SignalObject.OnUpdate">
            <summary>
              當有資料時會觸發這個更新的事件
            </summary>
        </member>
        <member name="M:PowerLanguage.SignalObject.OnTradeResponse(Zeghs.Events.ResponseEvent)">
            <summary>
              觸發交易回報事件
            </summary>
            <param name="e">ResponseEvent 類別</param>
        </member>
        <member name="M:PowerLanguage.SignalObject.CreateTrader(PowerLanguage.IInstrument,System.Object,System.String)">
            <summary>
              交易服務建立員
            </summary>
            <param name="instrument">商品資訊介面</param>
            <param name="args">交易服務組件設定參數</param>
            <param name="orderSource">交易服務來源名稱[預設:null](format: 交易組件名稱;交易服務類別名稱, null=使用預設交易服務來源類別名稱)</param>
        </member>
        <member name="M:PowerLanguage.SignalObject.DestroyTrader(System.String,System.Boolean)">
            <summary>
              釋放交易服務所有資源
            </summary>
            <param name="symbolId">商品代號</param>
            <param name="freeInstrument">是否一併釋放商品資訊類別[預設:false](true=一併釋放, false=不釋放保留於快取內)</param>
        </member>
        <member name="M:PowerLanguage.SignalObject.SelectTrader(System.String)">
            <summary>
              選擇作用中的交易服務
            </summary>
            <param name="symbolId">商品代號</param>
        </member>
        <member name="E:PowerLanguage.SignalObject.onTradeResponse">
            <summary>
              收到委託或是成交回報時需要觸發的事件
            </summary>
        </member>
        <member name="P:PowerLanguage.SignalObject.CurrentPosition">
            <summary>
              [取得] 目前的留倉部位
            </summary>
        </member>
        <member name="P:PowerLanguage.SignalObject.Positions">
            <summary>
              [取得] 留倉部位序列資訊
            </summary>
        </member>
        <member name="P:PowerLanguage.SignalObject.InitialCapital">
            <summary>
              [取得/設定] 初始本金
            </summary>
        </member>
        <member name="P:PowerLanguage.SignalObject.NetProfit">
            <summary>
              [取得] 已平倉的總損益
            </summary>
        </member>
        <member name="P:PowerLanguage.SignalObject.OrderCreator">
            <summary>
              [取得] 下單物件建立員
            </summary>
        </member>
        <member name="T:Zeghs.Utils.OutputWriter">
            <summary>
              輸出訊息寫入者類別
            </summary>
        </member>
        <member name="M:Zeghs.Utils.OutputWriter.Write(System.Boolean)">
            <summary>
              寫入資料
            </summary>
            <param name="value">bool型別</param>
        </member>
        <member name="M:Zeghs.Utils.OutputWriter.Write(System.Char)">
            <summary>
              寫入資料
            </summary>
            <param name="value">char型別</param>
        </member>
        <member name="M:Zeghs.Utils.OutputWriter.Write(System.Char[])">
            <summary>
              寫入資料
            </summary>
            <param name="buffer">char陣列</param>
        </member>
        <member name="M:Zeghs.Utils.OutputWriter.Write(System.Decimal)">
            <summary>
              寫入資料
            </summary>
            <param name="value">decimal型別</param>
        </member>
        <member name="M:Zeghs.Utils.OutputWriter.Write(System.Double)">
            <summary>
              寫入資料
            </summary>
            <param name="value">double型別</param>
        </member>
        <member name="M:Zeghs.Utils.OutputWriter.Write(System.Single)">
            <summary>
              寫入資料
            </summary>
            <param name="value">float型別</param>
        </member>
        <member name="M:Zeghs.Utils.OutputWriter.Write(System.Int32)">
            <summary>
              寫入資料
            </summary>
            <param name="value">int型別</param>
        </member>
        <member name="M:Zeghs.Utils.OutputWriter.Write(System.Int64)">
            <summary>
              寫入資料
            </summary>
            <param name="value">long型別</param>
        </member>
        <member name="M:Zeghs.Utils.OutputWriter.Write(System.Object)">
            <summary>
              寫入資料
            </summary>
            <param name="value">object型別</param>
        </member>
        <member name="M:Zeghs.Utils.OutputWriter.Write(System.String)">
            <summary>
              寫入資料
            </summary>
            <param name="value">string型別</param>
        </member>
        <member name="M:Zeghs.Utils.OutputWriter.Write(System.UInt32)">
            <summary>
              寫入資料
            </summary>
            <param name="value">uint型別</param>
        </member>
        <member name="M:Zeghs.Utils.OutputWriter.Write(System.UInt64)">
            <summary>
              寫入資料
            </summary>
            <param name="value">ulong型別</param>
        </member>
        <member name="M:Zeghs.Utils.OutputWriter.Write(System.String,System.Object[])">
            <summary>
              寫入資料
            </summary>
            <param name="format">格式化表示字串</param>
            <param name="arg">參數陣列</param>
        </member>
        <member name="M:Zeghs.Utils.OutputWriter.Write(System.Char[],System.Int32,System.Int32)">
            <summary>
              寫入資料
            </summary>
            <param name="buffer">char陣列</param>
            <param name="index">起始位置</param>
            <param name="count">個數</param>
        </member>
        <member name="M:Zeghs.Utils.OutputWriter.WriteLine">
            <summary>
              寫入資料
            </summary>
        </member>
        <member name="M:Zeghs.Utils.OutputWriter.WriteLine(System.Boolean)">
            <summary>
              寫入資料
            </summary>
            <param name="value">bool型別</param>
        </member>
        <member name="M:Zeghs.Utils.OutputWriter.WriteLine(System.Char)">
            <summary>
              寫入資料
            </summary>
            <param name="value">char型別</param>
        </member>
        <member name="M:Zeghs.Utils.OutputWriter.WriteLine(System.Char[])">
            <summary>
              寫入資料
            </summary>
            <param name="buffer">char陣列</param>
        </member>
        <member name="M:Zeghs.Utils.OutputWriter.WriteLine(System.Decimal)">
            <summary>
              寫入資料
            </summary>
            <param name="value">decimal型別</param>
        </member>
        <member name="M:Zeghs.Utils.OutputWriter.WriteLine(System.Double)">
            <summary>
              寫入資料
            </summary>
            <param name="value">double型別</param>
        </member>
        <member name="M:Zeghs.Utils.OutputWriter.WriteLine(System.Single)">
            <summary>
              寫入資料
            </summary>
            <param name="value">float型別</param>
        </member>
        <member name="M:Zeghs.Utils.OutputWriter.WriteLine(System.Int32)">
            <summary>
              寫入資料
            </summary>
            <param name="value">int型別</param>
        </member>
        <member name="M:Zeghs.Utils.OutputWriter.WriteLine(System.Int64)">
            <summary>
              寫入資料
            </summary>
            <param name="value">long型別</param>
        </member>
        <member name="M:Zeghs.Utils.OutputWriter.WriteLine(System.Object)">
            <summary>
              寫入資料
            </summary>
            <param name="value">object型別</param>
        </member>
        <member name="M:Zeghs.Utils.OutputWriter.WriteLine(System.String)">
            <summary>
              寫入資料
            </summary>
            <param name="value">string型別</param>
        </member>
        <member name="M:Zeghs.Utils.OutputWriter.WriteLine(System.UInt32)">
            <summary>
              寫入資料
            </summary>
            <param name="value">uint型別</param>
        </member>
        <member name="M:Zeghs.Utils.OutputWriter.WriteLine(System.UInt64)">
            <summary>
              寫入資料
            </summary>
            <param name="value">ulong型別</param>
        </member>
        <member name="M:Zeghs.Utils.OutputWriter.WriteLine(System.String,System.Object[])">
            <summary>
              寫入資料
            </summary>
            <param name="format">格式化表示字串</param>
            <param name="arg">參數陣列</param>
        </member>
        <member name="M:Zeghs.Utils.OutputWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
            <summary>
              寫入資料
            </summary>
            <param name="buffer">char陣列</param>
            <param name="index">起始位置</param>
            <param name="count">個數</param>
        </member>
        <member name="M:Zeghs.Utils.OutputWriter.Dispose(System.Boolean)">
            <summary>
              釋放 System.IO.TextWriter 使用的 Unmanaged 資源，並選擇性釋放 Managed 資源。
            </summary>
            <param name="disposing">true，表示釋放 Managed 和 Unmanaged 資源；false，表示只釋放 Unmanaged 資源。</param>
        </member>
        <member name="E:Zeghs.Utils.OutputWriter.onOutputData">
            <summary>
              輸出資料時所觸發的事件
            </summary>
        </member>
        <member name="P:Zeghs.Utils.OutputWriter.Encoding">
            <summary>
              [取得] 字串編碼規則(Default)
            </summary>
        </member>
    </members>
</doc>
