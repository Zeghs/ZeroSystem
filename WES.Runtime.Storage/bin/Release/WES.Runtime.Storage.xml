<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WES.Runtime.Storage</name>
    </assembly>
    <members>
        <member name="T:Zeghs.Events.SeriesPositionChangeEvent">
            <summary>
              SeriesSymbolData 的 Current 改變時所觸發的事件
            </summary>
        </member>
        <member name="P:Zeghs.Events.SeriesPositionChangeEvent.Current">
            <summary>
              [取得] 目前索引位置
            </summary>
        </member>
        <member name="P:Zeghs.Events.SeriesPositionChangeEvent.Status">
            <summary>
              [取得] Bars 狀態
            </summary>
        </member>
        <member name="T:Zeghs.Events.SeriesRequestEvent">
            <summary>
              當輸入的索引位置超出 Series 範圍時會觸發此事件做資料要求處理
            </summary>
        </member>
        <member name="M:Zeghs.Events.SeriesRequestEvent.#ctor(System.Int32)">
            <summary>
              建構子
            </summary>
            <param name="position">使用者輸入的索引位置</param>
        </member>
        <member name="P:Zeghs.Events.SeriesRequestEvent.Position">
            <summary>
              [取得] 使用者輸入的索引位置(Current + barsAgo)
            </summary>
        </member>
        <member name="T:Zeghs.Events.DataRequestEvent">
            <summary>
              資料請求事件類別
            </summary>
        </member>
        <member name="P:Zeghs.Events.DataRequestEvent.Count">
            <summary>
              [取得/設定] 要請求的資料個數
            </summary>
        </member>
        <member name="P:Zeghs.Events.DataRequestEvent.IsAlreadyRequestAllData">
            <summary>
              [取得/設定] 是否已經請求全部資料
            </summary>
        </member>
        <member name="P:Zeghs.Events.DataRequestEvent.Rate">
            <summary>
              [取得] 與基礎周期的縮放比率
            </summary>
        </member>
        <member name="P:Zeghs.Events.DataRequestEvent.Ranges">
            <summary>
              [取得/設定] 資料的區間日期(0=起始日期, 1=終止日期)
            </summary>
        </member>
        <member name="P:Zeghs.Events.DataRequestEvent.Result">
            <summary>
              [取得/設定] 返回值
            </summary>
        </member>
        <member name="P:Zeghs.Events.DataRequestEvent.Totals">
            <summary>
              [取得] 資料總個數(欲請求個數 + 目前已下載完後的資料個數)
            </summary>
        </member>
        <member name="T:Zeghs.IO.ZReader">
            <summary>
               處理Response串流資料的類別(有針對GZip壓縮做特別處理)
            </summary>
        </member>
        <member name="M:Zeghs.IO.ZReader.Read">
            <summary>
               讀取Response資料
            </summary>
            <returns>返回值：ZBuffer類別(null=讀取失敗)</returns>
        </member>
        <member name="M:Zeghs.IO.ZReader.ReadText">
            <summary>
               讀取Response資料
            </summary>
            <returns>返回值：網頁內容</returns>
        </member>
        <member name="P:Zeghs.IO.ZReader.BeginDate">
            <summary>
              [取得] 資料起始日期
            </summary>
        </member>
        <member name="P:Zeghs.IO.ZReader.Charset">
            <summary>
               [取得/設定]目前編碼模式(預設:utf-8)
            </summary>
        </member>
        <member name="P:Zeghs.IO.ZReader.Count">
            <summary>
              [取得] 下載的資料區塊個數
            </summary>
        </member>
        <member name="P:Zeghs.IO.ZReader.EndDate">
            <summary>
              [取得] 資料終止日期
            </summary>
        </member>
        <member name="P:Zeghs.IO.ZReader.Position">
            <summary>
              [取得] 請求的資料位置
            </summary>
        </member>
        <member name="P:Zeghs.IO.ZReader.Result">
            <summary>
              [取得] 回傳代碼(0=成功)
            </summary>
        </member>
        <member name="T:Zeghs.IO.IDeviceCreator">
            <summary>
              歷史資料裝置建立者介面
            </summary>
        </member>
        <member name="M:Zeghs.IO.IDeviceCreator.Create">
            <summary>
              建立歷史資料過檔裝置的執行個體
            </summary>
            <returns>抽象裝置基底類別</returns>
        </member>
        <member name="T:PowerLanguage.LoadDataCallback">
            <summary>
              DataLoader 使用非同步取得 Instrument 商品資料會使用此委派通知使用者
            </summary>
            <param name="result">資料讀取者回報類別</param>
        </member>
        <member name="T:PowerLanguage.DataLoaderResult">
            <summary>
              資料讀取者回報類別(使用非同步取得 Instrument 會使用此類別存放回報結果)
            </summary>
        </member>
        <member name="P:PowerLanguage.DataLoaderResult.Data">
            <summary>
              [取得] IInstrument 商品資料
            </summary>
        </member>
        <member name="P:PowerLanguage.DataLoaderResult.Quote">
            <summary>
              [取得] 商品資料的即時報價資訊介面
            </summary>
        </member>
        <member name="P:PowerLanguage.DataLoaderResult.Parameters">
            <summary>
              [取得] 使用者自訂參數
            </summary>
        </member>
        <member name="T:Zeghs.IO.ZBuffer">
            <summary>
              資料緩衝區類別
            </summary>
        </member>
        <member name="M:Zeghs.IO.ZBuffer.#ctor">
            <summary>
              建構子
            </summary>
        </member>
        <member name="M:Zeghs.IO.ZBuffer.#ctor(System.Int32)">
            <summary>
              建構子
            </summary>
            <param name="size">緩衝區大小</param>
        </member>
        <member name="M:Zeghs.IO.ZBuffer.#ctor(System.Byte[])">
            <summary>
              ZBuffer建構子
            </summary>
            <param name="buffer">緩衝區陣列</param>
        </member>
        <member name="M:Zeghs.IO.ZBuffer.#ctor(Zeghs.IO.ZBuffer)">
            <summary>
              ZBuffer建構子
            </summary>
            <param name="buffer">ZBuffer緩衝區</param>
        </member>
        <member name="M:Zeghs.IO.ZBuffer.Add(System.Byte[])">
            <summary>
               加入新封包
            </summary>
            <param name="buffer">來源封包陣列</param>
            <returns>返回值:ture=成功  false=失敗</returns>
        </member>
        <member name="M:Zeghs.IO.ZBuffer.Add(Zeghs.IO.ZBuffer)">
            <summary>
               加入新封包
            </summary>
            <param name="buffer">來源ZBuffer封包</param>
            <returns>返回值:ture=成功  false=失敗</returns>
        </member>
        <member name="M:Zeghs.IO.ZBuffer.Add(System.Byte[],System.Int32,System.Int32)">
            <summary>
               加入新封包
            </summary>
            <param name="buffer">來源封包陣列</param>
            <param name="index">來源封包起始位置</param>
            <param name="length">複製長度</param>
            <returns>返回值:ture=成功  false=失敗</returns>
        </member>
        <member name="M:Zeghs.IO.ZBuffer.Add(System.Boolean)">
            <summary>
              加入布林資料(1bytes)
            </summary>
            <param name="value">布林資料</param>
            <returns>返回值: ture=成功, false=失敗</returns>
        </member>
        <member name="M:Zeghs.IO.ZBuffer.Add(System.Byte)">
            <summary>
              加入byte資料(1bytes)
            </summary>
            <param name="value">byte資料</param>
            <returns>返回值: ture=成功, false=失敗</returns>
        </member>
        <member name="M:Zeghs.IO.ZBuffer.Add(System.Int16)">
            <summary>
              加入short資料(2bytes)
            </summary>
            <param name="value">short資料</param>
            <returns>返回值: ture=成功, false=失敗</returns>
        </member>
        <member name="M:Zeghs.IO.ZBuffer.Add(System.UInt16)">
            <summary>
              加入ushort資料(2bytes)
            </summary>
            <param name="value">ushort資料</param>
            <returns>返回值: ture=成功, false=失敗</returns>
        </member>
        <member name="M:Zeghs.IO.ZBuffer.Add(System.Int32)">
            <summary>
              加入int資料(4bytes, 64位元為8bytes)
            </summary>
            <param name="value">int資料</param>
            <returns>返回值: ture=成功, false=失敗</returns>
        </member>
        <member name="M:Zeghs.IO.ZBuffer.Add(System.UInt32)">
            <summary>
              加入uint資料(4bytes, 64位元為8bytes)
            </summary>
            <param name="value">uint資料</param>
            <returns>返回值: ture=成功, false=失敗</returns>
        </member>
        <member name="M:Zeghs.IO.ZBuffer.Add(System.Int64)">
            <summary>
              加入long資料(8bytes)
            </summary>
            <param name="value">long資料</param>
            <returns>返回值: ture=成功, false=失敗</returns>
        </member>
        <member name="M:Zeghs.IO.ZBuffer.Add(System.UInt64)">
            <summary>
              加入ulong資料(8bytes)
            </summary>
            <param name="value">ulong資料</param>
            <returns>返回值: ture=成功, false=失敗</returns>
        </member>
        <member name="M:Zeghs.IO.ZBuffer.Add(System.Single)">
            <summary>
              加入float資料(4bytes)
            </summary>
            <param name="value">float資料</param>
            <returns>返回值: ture=成功, false=失敗</returns>
        </member>
        <member name="M:Zeghs.IO.ZBuffer.Add(System.Double)">
            <summary>
              加入double資料(8bytes)
            </summary>
            <param name="value">double資料</param>
            <returns>返回值: ture=成功, false=失敗</returns>
        </member>
        <member name="M:Zeghs.IO.ZBuffer.GetBoolean">
            <summary>
              取得Boolean資料
            </summary>
            <returns>返回值: Boolean</returns>
        </member>
        <member name="M:Zeghs.IO.ZBuffer.GetByte">
            <summary>
              取得Byte資料
            </summary>
            <returns>返回值: Byte</returns>
        </member>
        <member name="M:Zeghs.IO.ZBuffer.GetDateTime">
            <summary>
              取得DateTime資料
            </summary>
            <returns>返回值: DateTime結構</returns>
        </member>
        <member name="M:Zeghs.IO.ZBuffer.GetInt16">
            <summary>
              取得Int16資料
            </summary>
            <returns>返回值: Int16</returns>
        </member>
        <member name="M:Zeghs.IO.ZBuffer.GetUInt16">
            <summary>
              取得UInt16資料
            </summary>
            <returns>返回值: UInt16</returns>
        </member>
        <member name="M:Zeghs.IO.ZBuffer.GetInt32">
            <summary>
              取得Int32資料
            </summary>
            <returns>返回值: Int32</returns>
        </member>
        <member name="M:Zeghs.IO.ZBuffer.GetUInt32">
            <summary>
              取得UInt32資料
            </summary>
            <returns>返回值: UInt32</returns>
        </member>
        <member name="M:Zeghs.IO.ZBuffer.GetInt64">
            <summary>
              取得Int64資料
            </summary>
            <returns>返回值: Int64</returns>
        </member>
        <member name="M:Zeghs.IO.ZBuffer.GetUInt64">
            <summary>
              取得UInt64資料
            </summary>
            <returns>返回值: UInt64</returns>
        </member>
        <member name="M:Zeghs.IO.ZBuffer.GetSingle">
            <summary>
              取得Single資料
            </summary>
            <returns>返回值: Single</returns>
        </member>
        <member name="M:Zeghs.IO.ZBuffer.GetDouble">
            <summary>
              取得Double資料
            </summary>
            <returns>返回值: Double</returns>
        </member>
        <member name="M:Zeghs.IO.ZBuffer.ToString">
            <summary>
              將封包資訊轉換成String
            </summary>
            <returns>返回值: 封包資訊內容字串</returns>
        </member>
        <member name="P:Zeghs.IO.ZBuffer.Data">
            <summary>
               [取得/設定] 緩衝區內容
            </summary>
        </member>
        <member name="P:Zeghs.IO.ZBuffer.Length">
            <summary>
               [取得/設定] 緩衝區資料大小
            </summary>
        </member>
        <member name="P:Zeghs.IO.ZBuffer.Position">
            <summary>
               [取得/設定] 目前索引位置
            </summary>
        </member>
        <member name="P:Zeghs.IO.ZBuffer.Size">
            <summary>
               [取得] 緩衝區容量
            </summary>
        </member>
        <member name="P:Zeghs.IO.ZBuffer.Item(System.Int32)">
            <summary>
              [取得] 緩衝區內位元組資料
            </summary>
            <param name="offset">偏移位置(Position + offset為實際位置)</param>
            <returns></returns>
        </member>
        <member name="T:Zeghs.Events.InstrumentChangeEvent">
            <summary>
              Instrument 商品資料更動事件(當 Instrument 商品資料新增或修改時會觸發此事件)
            </summary>
        </member>
        <member name="P:Zeghs.Events.InstrumentChangeEvent.Data">
            <summary>
              [取得] IInstrument 商品資料
            </summary>
        </member>
        <member name="P:Zeghs.Events.InstrumentChangeEvent.data_stream">
            <summary>
              [取得] 資料串流的編號
            </summary>
        </member>
        <member name="T:Zeghs.Managers.SeriesManager">
            <summary>
              股票資訊管理者類別
            </summary>
        </member>
        <member name="M:Zeghs.Managers.SeriesManager.LoadSettings">
            <summary>
              讀取 Series 設定值
            </summary>
        </member>
        <member name="M:Zeghs.Managers.SeriesManager.SaveSettings">
            <summary>
              儲存 Series 設定值
            </summary>
        </member>
        <member name="M:Zeghs.Managers.SeriesManager.SetDeviceCreator(Zeghs.IO.IDeviceCreator)">
            <summary>
              設定歷史資料裝置建立者介面
            </summary>
            <param name="deviceCreator">歷史資料裝置建立者介面</param>
        </member>
        <member name="M:Zeghs.Managers.SeriesManager.AsyncGetSeries(PowerLanguage.InstrumentDataRequest,System.EventHandler{Zeghs.Events.SeriesResultEvent},System.Boolean,System.Object,System.Int32)">
            <summary>
              非同步模式取得序列商品資訊
            </summary>
            <param name="dataRequest">資料請求結構</param>
            <param name="result">序列商品資訊回報事件</param>
            <param name="useCache">是否使用快取 [預設:true](true=序列資料結構建立後保存在快取內，下次需要使用直接從快取拿取, false=重新建立序列資料結構，建立的序列資料需要自行移除否則會占用記憶體空間)</param>
            <param name="args">使用者自訂參數</param>
            <param name="millisecondsTimeout">回補資料 Timeout 毫秒數 [預設:System.Threading.Timeout.Infinite (永遠等待直到回補完成)]</param>
        </member>
        <member name="M:Zeghs.Managers.SeriesManager.GetSeries(PowerLanguage.InstrumentDataRequest,System.Boolean,System.Int32)">
            <summary>
              取得序列商品資訊
            </summary>
            <param name="dataRequest">資料請求結構</param>
            <param name="useCache">是否使用快取 [預設:true](true=序列資料結構建立後保存在快取內，下次需要使用直接從快取拿取, false=重新建立序列資料結構，建立的序列資料需要自行移除否則會占用記憶體空間)</param>
            <param name="millisecondsTimeout">回補資料 Timeout 毫秒數 [預設:System.Threading.Timeout.Infinite (永遠等待直到回補完成)]</param>
            <returns>返回值: SeriesSymbolDataRand 類別</returns>
        </member>
        <member name="M:Zeghs.Managers.SeriesManager.SetQuoteService(System.String)">
            <summary>
              設定報價資訊服務
            </summary>
            <param name="dataSource">報價資訊來源名稱</param>
        </member>
        <member name="M:Zeghs.Managers.SeriesManager.RemoveSeries(Zeghs.Data.SeriesSymbolDataRand)">
            <summary>
              移除商品資訊(如果 GetSeries 不是使用 useCache 模式都需要移除)
            </summary>
            <param name="seriesSymbolDataRand">商品資訊類別</param>
        </member>
        <member name="P:Zeghs.Managers.SeriesManager.Settings">
            <summary>
              [取得] Series 設定資訊
            </summary>
        </member>
        <member name="P:Zeghs.Managers.SeriesManager.Manager">
            <summary>
              [取得] SeriesManager 類別
            </summary>
        </member>
        <member name="M:Zeghs.IO.DataAdapter.Dispose">
            <summary>
              釋放腳本資源
            </summary>
        </member>
        <member name="M:Zeghs.IO.DataAdapter.Dispose(System.Boolean)">
            <summary>
              釋放腳本資源
            </summary>
            <param name="disposing">是否正在處理資源中</param>
        </member>
        <member name="T:PowerLanguage.VariableSeries`1">
            <summary>
               變數序列類別
            </summary>
            <typeparam name="T">泛型型態</typeparam>
        </member>
        <member name="M:PowerLanguage.VariableSeries`1.#ctor(PowerLanguage.IStudyControl)">
            <summary>
              建構子
            </summary>
            <param name="master">CStudyControl 類別</param>
        </member>
        <member name="M:PowerLanguage.VariableSeries`1.#ctor(PowerLanguage.IStudyControl,`0)">
            <summary>
              建構子
            </summary>
            <param name="master">CStudyControl 類別</param>
            <param name="defaultVal">預設值</param>
        </member>
        <member name="M:PowerLanguage.VariableSeries`1.#ctor(PowerLanguage.IStudyControl,`0,System.Int32)">
            <summary>
              建構子
            </summary>
            <param name="master">CStudyControl 類別</param>
            <param name="defaultVal">預設值</param>
            <param name="dataStream">資料串流編號</param>
        </member>
        <member name="M:PowerLanguage.VariableSeries`1.Move(System.Int32)">
            <summary>
             移動 Current 索引
            </summary>
            <param name="index">索引值</param>
        </member>
        <member name="M:PowerLanguage.VariableSeries`1.CreateArray(System.Int32)">
            <summary>
              建立陣列(複寫原來的方法)
            </summary>
            <param name="size">陣列大小</param>
            <returns>返回值: 陣列空間</returns>
        </member>
        <member name="M:PowerLanguage.VariableSeries`1.Dispose(System.Boolean)">
            <summary>
              釋放腳本資源
            </summary>
            <param name="disposing">是否正在處理資源中</param>
        </member>
        <member name="P:PowerLanguage.VariableSeries`1.DataStream">
            <summary>
              [取得] 資料串流編號
            </summary>
        </member>
        <member name="P:PowerLanguage.VariableSeries`1.DefaultValue">
            <summary>
              [設定] 預設值
            </summary>
        </member>
        <member name="P:PowerLanguage.VariableSeries`1.Value">
            <summary>
              [取得/設定] 目前資料
            </summary>
        </member>
        <member name="P:PowerLanguage.VariableSeries`1.Item(System.Int32)">
            <summary>
              [取得] 目前或是之前的資料
            </summary>
            <param name="barsAgo">目前或是之前的索引(0=目前的 Bar)</param>
            <returns>返回值:從索引值獲得的所需資料</returns>
        </member>
        <member name="T:Zeghs.Data.SeriesSymbolDataRand">
            <summary>
              隨機商品序列資料類別(提供給 Instrument 類別作來源資料使用)
            </summary>
        </member>
        <member name="M:Zeghs.Data.SeriesSymbolDataRand.#ctor(Zeghs.Data.SeriesSymbolData,PowerLanguage.InstrumentDataRequest)">
            <summary>
              建構子
            </summary>
            <param name="source">SeriesSymbolData 商品資料類別</param>
            <param name="request">資料請求結構</param>
        </member>
        <member name="M:Zeghs.Data.SeriesSymbolDataRand.Dispose">
            <summary>
              釋放腳本資源
            </summary>
        </member>
        <member name="M:Zeghs.Data.SeriesSymbolDataRand.SetMaxbarsReferance(System.Int32)">
            <summary>
              設定最大 Bars count 參考個數
            </summary>
            <param name="maxbarsReferance">最大 bars count 參考個數</param>
        </member>
        <member name="P:Zeghs.Data.SeriesSymbolDataRand.Close">
            <summary>
              [取得] 收盤價陣列資訊
            </summary>
        </member>
        <member name="P:Zeghs.Data.SeriesSymbolDataRand.Count">
            <summary>
              [取得] 序列資料總個數(歷史序列資料+今日即時序列資料)
            </summary>
        </member>
        <member name="P:Zeghs.Data.SeriesSymbolDataRand.Current">
            <summary>
              [取得] 目前 Bars 索引值(索引從 1 開始)
            </summary>
        </member>
        <member name="P:Zeghs.Data.SeriesSymbolDataRand.High">
            <summary>
              [取得] 最高價陣列資訊
            </summary>
        </member>
        <member name="P:Zeghs.Data.SeriesSymbolDataRand.Low">
            <summary>
              [取得] 最低價陣列資訊
            </summary>
        </member>
        <member name="P:Zeghs.Data.SeriesSymbolDataRand.Open">
            <summary>
              [取得] 開盤價陣列資訊
            </summary>
        </member>
        <member name="P:Zeghs.Data.SeriesSymbolDataRand.Time">
            <summary>
              [取得] 日期時間陣列資訊
            </summary>
        </member>
        <member name="P:Zeghs.Data.SeriesSymbolDataRand.Volume">
            <summary>
              [取得] 成交量陣列資訊
            </summary>
        </member>
        <member name="P:Zeghs.Data.SeriesSymbolDataRand.BarsCount">
            <summary>
              [取得] Bars 資料總個數
            </summary>
        </member>
        <member name="P:Zeghs.Data.SeriesSymbolDataRand.BarsSize">
            <summary>
              [取得] Bars 資料容器大小(包含預留的即時資料空間)
            </summary>
        </member>
        <member name="P:Zeghs.Data.SeriesSymbolDataRand.DOM">
            <summary>
              [取得] 委託價量資訊
            </summary>
        </member>
        <member name="P:Zeghs.Data.SeriesSymbolDataRand.Quotes">
            <summary>
              [取得] 即時報價資訊
            </summary>
        </member>
        <member name="P:Zeghs.Data.SeriesSymbolDataRand.Source">
            <summary>
              [取得] 來源 SeriesSymbolData 資料(此來源資料為)
            </summary>
        </member>
        <member name="T:Zeghs.Data.SeriesIndexer">
            <summary>
              SeriesSymbolData 資料索引子類別
            </summary>
        </member>
        <member name="M:Zeghs.Data.SeriesIndexer.AdjustIndex(System.Int32)">
            <summary>
              調整索引值(由前方插入歷史資料調整才需要調整索引值)
            </summary>
            <param name="adjustCount">調整的個數</param>
        </member>
        <member name="P:Zeghs.Data.SeriesIndexer.AdjustTotalCount">
            <summary>
              [取得] 調整的個數總和(往前插入歷史資料的調整總個數)
            </summary>
        </member>
        <member name="P:Zeghs.Data.SeriesIndexer.Count">
            <summary>
              [取得] 序列資料總個數(歷史序列資料+今日即時序列資料)
            </summary>
        </member>
        <member name="P:Zeghs.Data.SeriesIndexer.HistoryIndex">
            <summary>
              [取得/設定] 目前歷史資料索引值
            </summary>
        </member>
        <member name="P:Zeghs.Data.SeriesIndexer.RealtimeIndex">
            <summary>
              [取得/設定] 目前即時資料索引值
            </summary>
        </member>
        <member name="P:Zeghs.IO.ZRequest.Charset">
            <summary>
               [取得/設定]目前編碼模式(預設:UTF-8)
            </summary>
        </member>
        <member name="P:Zeghs.IO.ZRequest.CookieContainer">
            <summary>
               [取得/設定]CookieContainer集合
            </summary>
        </member>
        <member name="P:Zeghs.IO.ZRequest.ContentType">
            <summary>
               [取得/設定]ContentType
            </summary>
        </member>
        <member name="P:Zeghs.IO.ZRequest.KeepAlive">
            <summary>
               [取得/設定]是否要持續連線
            </summary>
        </member>
        <member name="P:Zeghs.IO.ZRequest.Method">
            <summary>
               [取得/設定]提交方式("GET", "POST")
            </summary>
        </member>
        <member name="P:Zeghs.IO.ZRequest.Parameters">
            <summary>
               [取得/設定]Post參數
            </summary>
        </member>
        <member name="P:Zeghs.IO.ZRequest.Referer">
            <summary>
               [取得/設定]參考位址
            </summary>
        </member>
        <member name="P:Zeghs.IO.ZRequest.Response">
            <summary>
               [取得]HttpWebResponse類別
            </summary>
        </member>
        <member name="P:Zeghs.IO.ZRequest.RequestTimeout">
            <summary>
               [取得/設定]請求逾時的時間(單位：1/1000s  預設：20000)
            </summary>
        </member>
        <member name="P:Zeghs.IO.ZRequest.Url">
            <summary>
               [取得/設定]Request Url字串
            </summary>
        </member>
        <member name="T:Zeghs.IO.AbstractDevice">
            <summary>
              抽象裝置基底類別(給 DataAdapter 使用的抽象裝置基底類別)
            </summary>
        </member>
        <member name="M:Zeghs.IO.AbstractDevice.AddSeries(System.DateTime,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
              加入商品歷史資料
            </summary>
            <param name="time">時間</param>
            <param name="open">開盤價</param>
            <param name="high">最高價</param>
            <param name="low">最低價</param>
            <param name="close">收盤價</param>
            <param name="volume">成交量</param>
        </member>
        <member name="M:Zeghs.IO.AbstractDevice.AdjustSize(System.Int32)">
            <summary>
              調整商品資料容量
            </summary>
            <param name="count">欲調整資料個數</param>
        </member>
        <member name="M:Zeghs.IO.AbstractDevice.Request(Zeghs.Events.DataRequestEvent)">
            <summary>
              請求商品歷史資料
            </summary>
            <param name="e">資料請求事件</param>
        </member>
        <member name="P:Zeghs.IO.AbstractDevice.DataRequest">
            <summary>
              [取得] 歷史資料請求結構
            </summary>
        </member>
        <member name="P:Zeghs.IO.AbstractDevice.Position">
            <summary>
              [取得/設定] 目前已讀取的歷史資料位置
            </summary>
        </member>
        <member name="T:Zeghs.Data.SeriesSettings">
            <summary>
              Series 設定資訊
            </summary>
        </member>
        <member name="P:Zeghs.Data.SeriesSettings.HttpDomain">
            <summary>
              [取得/設定] Http Server domain
            </summary>
        </member>
        <member name="P:Zeghs.Data.SeriesSettings.TargetUrl">
            <summary>
              [取得/設定] Request method
            </summary>
        </member>
        <member name="T:Zeghs.Events.SeriesResultEvent">
            <summary>
              序列商品資料回報事件(使用非同步取得 SeriesSymbolDataRand 會使用此類別存放回報結果)
            </summary>
        </member>
        <member name="P:Zeghs.Events.SeriesResultEvent.Data">
            <summary>
              [取得] 序列商品資料
            </summary>
        </member>
        <member name="P:Zeghs.Events.SeriesResultEvent.Parameters">
            <summary>
              [取得] 使用者自訂參數
            </summary>
        </member>
        <member name="T:Zeghs.Data.Instrument">
            <summary>
               商品資訊類別(包含開高低收資訊與商品屬性及其他重要資訊)
            </summary>
        </member>
        <member name="M:Zeghs.Data.Instrument.#ctor(Zeghs.Data.SeriesSymbolDataRand)">
            <summary>
              建構子
            </summary>
            <param name="seriesSymbolDataRand">SeriesSymbolDataRand 類別</param>
        </member>
        <member name="M:Zeghs.Data.Instrument.BindResetEvent(System.EventHandler)">
            <summary>
              綁定清盤重置事件
            </summary>
            <param name="onReset">EventHandler 事件委派</param>
        </member>
        <member name="M:Zeghs.Data.Instrument.ClearResetEvent(System.EventHandler)">
            <summary>
              清除綁定的清盤重置事件
            </summary>
            <param name="onReset">EventHandler 事件委派</param>
        </member>
        <member name="M:Zeghs.Data.Instrument.Dispose">
            <summary>
              釋放腳本資源
            </summary>
        </member>
        <member name="M:Zeghs.Data.Instrument.MoveBars(System.DateTime)">
            <summary>
              移動 Bars 至指定的時間前
            </summary>
            <param name="time">指定的時間</param>
        </member>
        <member name="M:Zeghs.Data.Instrument.Next">
            <summary>
              從目前位置移動至下一個 Bars
            </summary>
            <returns>返回值: true=移動至下一個 Bars 成功, false=已經是最後一個 Bars</returns>
        </member>
        <member name="M:Zeghs.Data.Instrument.GetBarsState(System.DateTime)">
            <summary>
              [取得] 目前當下 Bars 狀態 
            </summary>
            <param name="time">欲比較的時間</param>
            <returns>返回值: true=目前 Bars 狀態在傳入的時間區間內, false=目前 Bars 狀態在傳入的時間區間後面</returns>
        </member>
        <member name="M:Zeghs.Data.Instrument.Next(System.DateTime)">
            <summary>
              從目前位置移動至下一個 Bars
            </summary>
            <param name="time">參考時間值(如果有傳入此時間, 會比對此時間與目前 CurrentBar 所在的時間區間, 如果傳入 DateTime.MinValue 則傳入目前 CurrentBar 所在的時間區間)</param>
            <returns>返回值: true=移動至下一個 Bars 成功, false=已經是最後一個 Bars</returns>
        </member>
        <member name="E:Zeghs.Data.Instrument.onPositionChange">
            <summary>
              當 CurrentBar 位置改變時所觸發的事件
            </summary>
        </member>
        <member name="P:Zeghs.Data.Instrument.BarUpdateTime">
            <summary>
              [取得] Bars 最新的更新時間
            </summary>
        </member>
        <member name="P:Zeghs.Data.Instrument.Close">
            <summary>
              [取得] 收盤價陣列資訊
            </summary>
        </member>
        <member name="P:Zeghs.Data.Instrument.Count">
            <summary>
              [取得] Bars 資料總個數
            </summary>
        </member>
        <member name="P:Zeghs.Data.Instrument.CurrentBar">
            <summary>
              [取得] 目前 Bars 索引值(索引從 1 開始)
            </summary>
        </member>
        <member name="P:Zeghs.Data.Instrument.DOM">
            <summary>
              [取得] 委託價量資訊
            </summary>
        </member>
        <member name="P:Zeghs.Data.Instrument.FullSymbolData">
            <summary>
              [取得] 商品的全部資訊
            </summary>
        </member>
        <member name="P:Zeghs.Data.Instrument.High">
            <summary>
              [取得] 最高價陣列資訊
            </summary>
        </member>
        <member name="P:Zeghs.Data.Instrument.Info">
            <summary>
              [取得] 商品屬性
            </summary>
        </member>
        <member name="P:Zeghs.Data.Instrument.IsLastBars">
            <summary>
              [取得] 是否為最後一根 Bars
            </summary>
        </member>
        <member name="P:Zeghs.Data.Instrument.LastBarTime">
            <summary>
              [取得] 最後一根 Bars 的時間
            </summary>
        </member>
        <member name="P:Zeghs.Data.Instrument.Low">
            <summary>
              [取得] 最低價陣列資訊
            </summary>
        </member>
        <member name="P:Zeghs.Data.Instrument.Open">
            <summary>
              [取得] 開盤價陣列資訊
            </summary>
        </member>
        <member name="P:Zeghs.Data.Instrument.Quotes">
            <summary>
              [取得] 即時報價資訊
            </summary>
        </member>
        <member name="P:Zeghs.Data.Instrument.Request">
            <summary>
              [取得] 資料請求資訊
            </summary>
        </member>
        <member name="P:Zeghs.Data.Instrument.Sessions">
            <summary>
              [取得] 開收盤的時間週期
            </summary>
        </member>
        <member name="P:Zeghs.Data.Instrument.Status">
            <summary>
              [取得] Bars 狀態
            </summary>
        </member>
        <member name="P:Zeghs.Data.Instrument.Time">
            <summary>
              [取得] 日期時間陣列資訊
            </summary>
        </member>
        <member name="P:Zeghs.Data.Instrument.Volume">
            <summary>
              [取得] 成交量陣列資訊
            </summary>
        </member>
        <member name="T:Zeghs.IO.DataLoader">
            <summary>
              商品資訊 Instrument 資料讀取者類別
            </summary>
        </member>
        <member name="T:Zeghs.IO.IDataLoader">
            <summary>
              資料讀取者介面
            </summary>
        </member>
        <member name="M:Zeghs.IO.IDataLoader.BeginLoadData(PowerLanguage.InstrumentDataRequest,PowerLanguage.LoadDataCallback,System.Boolean,System.Object,System.Int32)">
            <summary>
              非同步讀取資料請求結構內的 IInstrument 資料
            </summary>
            <param name="request">資料請求結構</param>
            <param name="result">當成功取得 IInstrument 商品資料會使用此委派方法回傳資料</param>
            <param name="useCache">是否使用快取 [預設:false](true=序列資料結構建立後保存在快取內，下次需要使用直接從快取拿取, false=重新建立序列資料結構，建立的序列資料需要自行移除否則會占用記憶體空間)</param>
            <param name="args">使用者自訂參數</param>
            <param name="millisecondsTimeout">回補資料 Timeout 毫秒數 [預設:System.Threading.Timeout.Infinite (永遠等待直到回補完成)]</param>
        </member>
        <member name="M:Zeghs.IO.DataLoader.#ctor">
            <summary>
              建構子
            </summary>
        </member>
        <member name="M:Zeghs.IO.DataLoader.AddData(Zeghs.Data.Instrument)">
            <summary>
              加入 Instrument 資料
            </summary>
            <param name="instrument">Instrument 商品資訊類別</param>
            <returns>返回值: 資料存放索引值(從 0 開始)</returns>
        </member>
        <member name="M:Zeghs.IO.DataLoader.BeginLoadData(PowerLanguage.InstrumentDataRequest,PowerLanguage.LoadDataCallback,System.Boolean,System.Object,System.Int32)">
            <summary>
              非同步讀取資料請求結構內的 Instrument 資料
            </summary>
            <param name="request">資料請求結構</param>
            <param name="result">當成功取得 Instrument 商品資料會使用此委派方法回傳資料</param>
            <param name="useCache">是否使用快取 [預設:false](true=序列資料結構建立後保存在快取內，下次需要使用直接從快取拿取, false=重新建立序列資料結構，建立的序列資料需要自行移除否則會占用記憶體空間)</param>
            <param name="args">使用者自訂參數</param>
            <param name="millisecondsTimeout">回補資料 Timeout 毫秒數 [預設:System.Threading.Timeout.Infinite (永遠等待直到回補完成)]</param>
        </member>
        <member name="M:Zeghs.IO.DataLoader.Dispose">
            <summary>
              釋放腳本資源
            </summary>
        </member>
        <member name="M:Zeghs.IO.DataLoader.GetInstrument(System.Int32)">
            <summary>
              取得 Instrument 商品資訊
            </summary>
            <param name="index">資料存放索引值(從 0 起始)</param>
            <returns>返回值: Instrument 商品資訊類別</returns>
        </member>
        <member name="M:Zeghs.IO.DataLoader.LoadDataRange(System.Collections.Generic.List{PowerLanguage.InstrumentDataRequest},System.Boolean)">
            <summary>
              讀取資料請求結構列表內的 Instrument 資料
            </summary>
            <param name="requests">資料請求結構列表</param>
            <param name="useCache">是否使用快取(true=如果快取內有資料則從快取取得, false=不使用快取重新建立)</param>
        </member>
        <member name="M:Zeghs.IO.DataLoader.RemoveData(System.Int32)">
            <summary>
              移除 Instrument 資料
            </summary>
            <param name="index">資料存放索引值(從 0 起始)</param>
        </member>
        <member name="M:Zeghs.IO.DataLoader.SetMaximumBarsReference(System.Int32)">
            <summary>
              設定最大 Bars 參考個數
            </summary>
            <param name="barsCount">Bars 參考個數</param>
        </member>
        <member name="M:Zeghs.IO.DataLoader.Dispose(System.Boolean)">
            <summary>
              釋放腳本資源
            </summary>
            <param name="disposing">是否正在處理資源中</param>
        </member>
        <member name="E:Zeghs.IO.DataLoader.onAddInstrument">
            <summary>
              當有 Instrument 新增時所觸發的更動事件
            </summary>
        </member>
        <member name="E:Zeghs.IO.DataLoader.onLoadCompleted">
            <summary>
              當所有 Instrument 資料都讀取完畢後所觸發的事件
            </summary>
        </member>
        <member name="E:Zeghs.IO.DataLoader.onRemoveInstrument">
            <summary>
              當有 Instrument 移除時所觸發的更動事件
            </summary>
        </member>
        <member name="P:Zeghs.IO.DataLoader.Instruments">
            <summary>
              [取得] Instrument 商品資訊列表
            </summary>
        </member>
        <member name="P:Zeghs.IO.DataLoader.MaxInstrumentCount">
            <summary>
              [取得] 最大 Instrument 資訊個數
            </summary>
        </member>
        <member name="T:Zeghs.Data.SeriesSymbolData">
            <summary>
              商品資料類別(存放開高低收量資訊)
            </summary>
        </member>
        <member name="M:Zeghs.Data.SeriesSymbolData.Dispose">
            <summary>
              釋放腳本資源
            </summary>
        </member>
        <member name="M:Zeghs.Data.SeriesSymbolData.Dispose(System.Boolean)">
            <summary>
              釋放腳本資源
            </summary>
            <param name="disposing">是否正在處理資源中</param>
        </member>
        <member name="P:Zeghs.Data.SeriesSymbolData.Close">
            <summary>
              [取得] 收盤價陣列資訊
            </summary>
        </member>
        <member name="P:Zeghs.Data.SeriesSymbolData.High">
            <summary>
              [取得] 最高價陣列資訊
            </summary>
        </member>
        <member name="P:Zeghs.Data.SeriesSymbolData.Low">
            <summary>
              [取得] 最低價陣列資訊
            </summary>
        </member>
        <member name="P:Zeghs.Data.SeriesSymbolData.Open">
            <summary>
              [取得] 開盤價陣列資訊
            </summary>
        </member>
        <member name="P:Zeghs.Data.SeriesSymbolData.Time">
            <summary>
              [取得] 日期時間陣列資訊
            </summary>
        </member>
        <member name="P:Zeghs.Data.SeriesSymbolData.Volume">
            <summary>
              [取得] 成交量陣列資訊
            </summary>
        </member>
        <member name="M:Zeghs.IO.HttpPostDevice.Request(Zeghs.Events.DataRequestEvent)">
            <summary>
              請求商品歷史資料
            </summary>
            <param name="e">資料請求事件</param>
        </member>
        <member name="M:Zeghs.Data.SeriesStorage.#ctor(System.Int32)">
            <summary>
              建構子
            </summary>
            <param name="capacity">擴充的容量大小</param>
        </member>
        <member name="M:Zeghs.Data.SeriesStorage.Add(Zeghs.Data.SeriesSymbolData,System.Boolean)">
            <summary>
              加入 SeriesSymbolData 列表
            </summary>
            <param name="series">SeriesSymbolData 列表</param>
            <param name="useIdentify">是否使用 Identify 當作 Hash 值(true=使用 Identify 作為 Hash 值, false=使用時間週期總秒數當作 Hash 值)</param>
        </member>
        <member name="M:Zeghs.Data.SeriesStorage.Clear">
            <summary>
              清除 SeriesStorage
            </summary>
        </member>
        <member name="M:Zeghs.Data.SeriesStorage.GetSeries(System.Int32)">
            <summary>
              取得指定的總秒數週期 SeriesSymbolData 列表
            </summary>
            <param name="hashKey">可以為時間週期總秒數或是 Identify</param>
        </member>
        <member name="M:Zeghs.Data.SeriesStorage.Remove(System.Int32)">
            <summary>
              移除 SeriesSymbolData 列表
            </summary>
            <param name="seriesId">SeriesSymbolData id</param>
        </member>
        <member name="M:Zeghs.Data.SeriesStorage.Reset(System.String)">
            <summary>
              處理清盤重置
            </summary>
            <param name="dataSource">即時報價來源名稱</param>
        </member>
        <member name="P:Zeghs.Data.SeriesStorage.Count">
            <summary>
              [取得] SeriesSymbolData 列表儲存個數
            </summary>
        </member>
        <member name="P:Zeghs.Data.SeriesStorage.Item(System.Int32)">
            <summary>
              [取得] SeriesSymbolData 列表
            </summary>
        </member>
        <member name="E:Zeghs.Data.Series`1.onRequest">
            <summary>
              當需要請求資訊時所觸發的事件
            </summary>
        </member>
        <member name="P:Zeghs.Data.Series`1.IsAbsolute">
            <summary>
              [取得/設定] 是否為絕對索引值模式(預設為相對索引值模式, 需要以 Current 屬性來做偏移)
            </summary>
        </member>
        <member name="P:Zeghs.Data.Series`1.Item(System.Int32)">
            <summary>
              [取得] 目前或是之前的資料
            </summary>
            <param name="barsAgo">目前或是之前的索引(0=目前的 Bar)</param>
            <returns>返回值:從索引值獲得的所需資料</returns>
        </member>
    </members>
</doc>
